@use '@angular/material' as mat;
@import "./colors.scss";
@import "./typography.scss";
@include mat.core();

::-webkit-scrollbar {
    width: 8px;
    padding: 1px;
    background: none;
}
::-webkit-scrollbar-thumb {
    border-radius: 0px;
    opacity: 0.15;
}

//custom color theme
.light {
    @include mat.all-component-themes((
        primary: mat.define-palette(to-material-map(primary), 50, 100, 200),
        accent: mat.define-palette(to-material-map(secondary), 50, 100, 200),
        foreground: mat.define-palette(to-material-map(dark), 50, 100, 200),
        background: mat.define-palette(to-material-map(light), 50, 100, 200),
        warn: mat.define-palette(to-material-map(warn)),
        is-dark: false
    ));
    background: color(light);
    color: on-color(light);
    ::-webkit-scrollbar-thumb {
        background: rgba(on-color(light), 0.15);
        &:hover { background: rgba(on-color(light), 0.25); }
    }
    scrollbar-color: rgba(on-color(light), 0.15) transparent; //firefox scrollbar styles
    hr { border: none; border-bottom: 1px solid border-color(light); }
    .matrix {
      tr.tactic {
        border-color: on-color-deemphasis(light);
          color: white;
          background-color: color(engenuity-purple);
      }
      .tactic td.technique {
        border: 1px solid on-color-deemphasis(light)
      }
      .supertechnique, .regularTechnique, .subtechniques {
        background-color: white;
        color: black;
      }
      .subtechnique {
        border: 1px solid on-color-deemphasis(light)
      }
      td.angle-top {
        background-color: color(engenuity-gray);
      }
      .sidebar.expanded .angle svg{
        fill: color(engenuity-gray)
      }
    }
    .matrix-container { border-color: on-color-deemphasis(light) }
}
.dark {
    @include mat.all-component-themes((
        primary: mat.define-palette(to-material-map(primary), 50, 100, 200),
        accent: mat.define-palette(to-material-map(secondary), 50, 100, 200),
        foreground: mat.define-palette(to-material-map(light), 50, 100, 200),
        background: mat.define-palette(to-material-map(dark), 50, 100, 200),
        warn: mat.define-palette(to-material-map(warn)),
        is-dark: true
    ));
    background: color(dark);
    color: on-color(dark);
    ::-webkit-scrollbar-thumb {
        background: rgba(on-color(dark), 0.15);
        &:hover { background: rgba(on-color(dark), 0.25); }
    }
    scrollbar-color: rgba(on-color(dark), 0.15) transparent; //firefox scrollbar styles
    hr { border: none; border-bottom: 1px solid border-color(dark); }
    .matrix {
      tr.tactic {
        border-color: border-color(dark);
      background-color: color(engenuity-gray);
      color: color(engenuity-black);
      }
      .tactic td.technique {
        border: 1px solid on-color-deemphasis(dark)
      }
      .supertechnique, .regularTechnique, .subtechniques {
        background-color: color(engenuity-black);
        color: white;
      }
      .subtechnique {
        border: 1px solid on-color-deemphasis(dark)
      }
      td.angle-top {
        background-color: color(engenuity-black);
      }
      .sidebar.expanded .angle svg{
        fill: color(engenuity-black)
      }
    }
    .matrix-container { border-color: on-color-deemphasis(dark) }
}

$tooltip-color: color-alternate(dark, 4);
//patch overlays for theme compatibility
.cdk-overlay-container, .cdk-overlay-container { //ensure that overlay doesn't visually cover everything
    background: transparent;
    .mat-mdc-tooltip { // tooltip styling
        background: $tooltip-color;
    }
    &.dark .mat-mdc-menu-panel {
        background: color(dark);
        color: on-color(dark);
        .mat-mdc-menu-item:hover {
            background: color-alternate(dark);
        }
        .mat-mdc-menu-item:disabled {
            color: on-color-deemphasis(dark);
        }
    }
    &.light .mat-mdc-menu-panel {
        background: color(light);
        color: on-color(light);
        .mat-mdc-menu-item:hover {
            background: color-alternate(light);
        }
        .mat-mdc-menu-item:disabled {
            color: on-color-deemphasis(light);
        }
    }
    &.dark .mat-mdc-dialog-surface {
        background: color(dark);
        color: on-color(dark);
    }
    &.light .mat-mdc-dialog-surface {
        background: color(light);
        color: on-color(light);
    }

    &.light .mat-mdc-snack-bar-container {
        background: color(light);
        color: on-color(light);
    }
    &.dark .mat-mdc-snack-bar-container {
        background: color(dark);
        color: on-color(dark);
    }
    .mat-mdc-snack-bar-container.success {
        background: color(success);
        color: on-color(success);
        button {
            color: on-color(success)
        }
    }
    .mat-mdc-snack-bar-container.warn {
        background: color(warn);
        color: on-color(warn);
        button {
            color: on-color(warn)
        }
    }

    &.light .mat-mdc-select-panel .mat-mdc-option.mat-active {
        background: color-alternate(light, 2.5);
    }
    &.dark .mat-mdc-select-panel .mat-mdc-option.mat-active {
        background: color-alternate(dark, 2.5);
    }

    &.light .mat-datepicker-popup {
        background: color-alternate(light);
    }
    &.dark .mat-datepicker-popup {
        background: color-alternate(dark);
    }
}
//patch popover style
.popover { // TODO: fix this
    //positioning because we didn't import bootstrap
    position: absolute;
    // add border radius
    border-radius: 4px !important;
    //don't force 20rem width, conform to content of popover
    width: unset !important;
    //override default colors
    background-color: $tooltip-color !important;
    .arrow::before, .arrow::after {
        border-bottom-color: $tooltip-color !important;
    }

    //override child labelled-box borders for visibility
    .labelled-box .content {
        &, & + label, .suffix {
            border-right-color: on-color-deemphasis(dark) !important;
            border-left-color: on-color-deemphasis(dark)!important;
            border-bottom-color: on-color-deemphasis(dark) !important;
        }
        & + label::before, & + label::after {
            border-top-color: on-color-deemphasis(dark) !important;
        }
        border-top-color: transparent !important;

    }

    // override mat-chip styles
    .mat-mdc-chip.mat-mdc-standard-chip {
        background: color-alternate(dark) !important;
        color: on-color(dark) !important;
    }
}

button.mat-mdc-outlined-button:disabled {
    opacity: 0.5;
}

.mat-mdc-select-panel {
    .light & {
        color: on-color(light);
        background: color(light);
    }
    .dark & {
        color: on-color-alternate(dark);
        background: color-alternate(dark);
    }
}

// change initial background form field color
.mdc-text-field--filled:not(.mdc-text-field--disabled) {
	.light & {
		background-color: color(light) !important;
	}
	.dark & {
		background-color: color(dark) !important;
	}
}
// remove form field focus overlay
.mat-mdc-form-field-focus-overlay {
	background-color: transparent !important;
}

.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before {
	.light & {
		border-bottom-color: border-color(light) !important;
	}
	.dark & {
		border-bottom-color: border-color(dark) !important;
	}

}

.mat-mdc-card .mat-mdc-card-header {
    .light & { background: color-alternate(light); }
    .dark & { background: color-alternate(dark); }
}

.mat-mdc-chip.mat-mdc-standard-chip {
    height: auto!important;
    .light & { background: color-alternate(light); }
    .dark &  { background: color-alternate(dark); }
}

.mat-step-icon:not(.mat-step-icon-selected):not(.mat-step-icon-state-edit) {
    .dark & { color: on-color(dark); }
    .light & { color: on-color(light); }
}
html, body { height: 100%; }
body {
    margin: 0;
    @extend %typography;
}
